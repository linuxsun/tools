<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>6</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>6</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>UpdatePackageName</name>
          <description>just one: dnsmasq,
package list: dnsmasq,nginx,......
,号结尾是必须的</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CmdHosts</name>
          <description>just one: 1.2.3.4,
host list: 1.2.3.4,192.168.2.2,172.16.3.4,......
,号结尾是必须的</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>State</name>
          <description>present、installed、latest  #安装。
                                           #latest 将更新指定的包，如果它不是最新的可用版本。
                                           #present，installed将简单地确保安装所需的程序包。

absent、removed              #移除。
                                           #absent，removed将删除指定的包。
</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>latest</string>
              <string>installed</string>
              <string>present</string>
              <string>absent</string>
              <string>removed</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>jenkins-build-node</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
SkipList=(&apos;kernel&apos; &apos;openssh&apos; &apos;network&apos; &apos;lvm2&apos;)
UpdatePackageName=&quot;${UpdatePackageName}&quot;
echo $UpdatePackageName | grep -o &apos;,&apos; &gt;/dev/null; ret=$?

if [ $ret -gt 1 ]; then
    echo &apos;,号结尾是必须的&apos;
    exit 1
else
    UpdatePackageNameOld=&quot;$UpdatePackageName&quot;
    UpdatePackageName=`echo &quot;$UpdatePackageName&quot; | sed &apos;s|,|\||g&apos;`
    UpdatePackageName=`echo ${UpdatePackageName%|}`
    #echo &quot;$UpdatePackageName&quot;
    for vars in ${SkipList[@]}
    do
        set +xe
        echo $vars | grep -Eo &quot;($UpdatePackageName)&quot; &gt;/dev/null ; ret=$?
        if [ $ret -eq 0 ]; then
            #continue
            echo &quot;cant removed|installd $vars&quot;
            exit 1
        fi
    done
    UpdatePackageName=&quot;`echo ${UpdatePackageNameOld%,}`&quot;
fi


test -f ${JOB_NAME}.hosts &amp;&amp; cat /dev/null &gt; ${JOB_NAME}.hosts
tee -a ${JOB_NAME}.hosts &lt;&lt;- &apos;EOF&apos;
[CmdHostsGroup]
EOF

set -xe
echo $CmdHosts|grep -o &apos;,&apos; 2&gt;/dev/null; ret=$?
if [ $ret -ge 1 ]; then
    exit 1
else
    CmdHosts=(`echo $CmdHosts|sed &apos;s|,| |g&apos;`)
    #CmdHosts=`echo ${CmdHosts%|}`
    for vars in ${CmdHosts[@]}
    do
echo $vars
tee -a ${JOB_NAME}.hosts &lt;&lt;- EOF
$vars ansible_sudo_pass=&apos;$PassWord&apos; ansible_ssh_port=$ssh_port
EOF
    done

fi


tee ${JOB_NAME}.yaml &lt;&lt;- EOF
---
- hosts: CmdHostsGroup
  remote_user: sysadmin

  vars:
    Keys: Values
    list_of_packages: &quot;$UpdatePackageName&quot;

  tasks:
  #- name: Set SSH port
  #  set_fact:
  #    ansible_port: &quot;${ssh_port}&quot;
    
  - name: some security upgrades Or remove
    yum:
      name: &quot;{{list_of_packages}}&quot;
      state: ${State}
      
EOF


</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder plugin="ansible@0.6.2">
      <playbook>${JOB_NAME}.yaml</playbook>
      <inventory class="org.jenkinsci.plugins.ansible.InventoryPath">
        <path>${JOB_NAME}.hosts</path>
      </inventory>
      <limit></limit>
      <tags></tags>
      <skippedTags></skippedTags>
      <startAtTask></startAtTask>
      <credentialsId></credentialsId>
      <sudo>true</sudo>
      <sudoUser></sudoUser>
      <forks>4</forks>
      <unbufferedOutput>true</unbufferedOutput>
      <colorizedOutput>false</colorizedOutput>
      <hostKeyChecking>false</hostKeyChecking>
      <additionalParameters>-vv</additionalParameters>
      <copyCredentialsInWorkspace>false</copyCredentialsInWorkspace>
    </org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder>
    <hudson.tasks.Shell>
      <command>unset UpdatePackageName CmdHosts PassWord ret vars ansible_sudo_pass UpdatePackageName State UpdatePackageNameOld
#test -f ${JOB_NAME}.hosts &amp;&amp; rm ${JOB_NAME}.hosts
#test -f ${JOB_NAME}.yaml &amp;&amp; rm ${JOB_NAME}.yaml
#test -f ${JOB_NAME}.retry &amp;&amp; rm ${JOB_NAME}.retry</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>########################################################
#My inventory looks like this:
#
#[webservers]
#web01.somedomain.com ansible_port=1234
#My playbook looks like this:
#
#- name: Determine SSH port
#  hosts: all
#  gather_facts: no
#  remote_user: root
#  tasks:
#    - name: &amp;quot;Check port {{ ansible_port }}&amp;quot;
#      wait_for:
#        port: &amp;quot;{{ ansible_port }}&amp;quot;
#        state: &amp;quot;started&amp;quot;
#        host: &amp;quot;{{ inventory_hostname }}&amp;quot;
#        connect_timeout: &amp;quot;5&amp;quot;
#        timeout: &amp;quot;5&amp;quot;
#      delegate_to: &amp;quot;localhost&amp;quot;
#      ignore_errors: &amp;quot;yes&amp;quot;
#      register: ssh_port
#
#    - name: &amp;quot;Check port 22&amp;quot;
#      wait_for:
#        port: &amp;quot;22&amp;quot;
#        state: &amp;quot;started&amp;quot;
#        host: &amp;quot;{{ inventory_hostname }}&amp;quot;
#        connect_timeout: &amp;quot;5&amp;quot;
#        timeout: &amp;quot;5&amp;quot;
#      delegate_to: &amp;quot;localhost&amp;quot;
#      ignore_errors: &amp;quot;yes&amp;quot;
#      register: ssh_port_default
#      when: 
#        - ssh_port is defined 
#        - ssh_port.state is undefined
#
#    - name: Set SSH port to 22
#      set_fact:
#        ansible_port: &amp;quot;22&amp;quot;
#      when: ssh_port_default.state is defined
#Finally, right after the SSH server is configured and the port has been changed I have this:
#
#- name: Set SSH port to 1234
#  set_fact:
#    ansible_port: &amp;quot;1234&amp;quot;
#
# 2018-10-09
# https://stackoverflow.com/questions/34333058/ansible-change-ssh-port-in-playbook
#</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.33">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>PassWord</name>
          <value>{z26DRu5NW1XLlHuXAsrycKuwND7WkDpi=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>ssh_port</name>
          <value>{z26DRu5NW1XLlHuXAsrycKuwND7WkDpi=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
</project>
